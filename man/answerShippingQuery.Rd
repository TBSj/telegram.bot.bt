% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bot.R
\name{answerShippingQuery}
\alias{answerShippingQuery}
\title{Send answers to shipping queries (Unfortunaly, doesn't work)}
\usage{
answerShippingQuery(
  shipping_query_id,
  ok = TRUE,
  title = NULL,
  label = NULL,
  amount = NULL,
  error_message = NULL
)
}
\arguments{
\item{shipping_query_id}{Unique identifier for the query to be answered.}

\item{ok}{Specify \code{TRUE} if delivery to the specified address is possible and \code{False} if there are any problems (for example, if delivery to the specified address is not possible).}

\item{title}{(Optional). Option title. It is need to shipping_options. Required if \code{ok} is \code{True}. A JSON-serialized array of available shipping options. Need activate @param title, @param label, @param amount .}

\item{label}{(Optional). Portion label. It is need to shipping_options. Required if \code{ok} is \code{True}. A JSON-serialized array of available shipping options. Need activate @param title, @param label, @param amount .}

\item{amount}{(Optional). Price of the product in the smallest units of the currency. It is need to shipping_options. Required if \code{ok} is \code{True}. A JSON-serialized array of available shipping options. Need activate @param title, @param label, @param amount .}

\item{error_message}{(Optional). Required if \code{ok} is \code{FALSE}. Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable'). Telegram will display this message to the user.}
}
\description{
If you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.
}
\details{
You can also use it's snake_case equivalent \code{answer_shipping_query}.
}
\examples{
\dontrun{
answerShipQuery <- function(bot, update) {
  id <- update$pre_checkout_query$id
  bot$answerShippingQuery(shipping_query_id = id, ok = FALSE, error_message = "Sorry, we can't send to this country")
}

shipping_handler <- ShippingQueryHandler(answerShipQuery)
}
}
